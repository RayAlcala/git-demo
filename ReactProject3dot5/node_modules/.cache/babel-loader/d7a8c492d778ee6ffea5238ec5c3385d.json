{"ast":null,"code":"var _jsxFileName = \"/Users/kianaalcala/Downloads/01-starting-project-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddUser from './components/Users/AddUser';\nimport UsersList from './components/Users/UsersList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]); // we need to lift the state up so that the siblings UsersList and AddUser can communicate to each other\n  // siblings cannot reach each other but they both reach the parent App.js\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList(prevUsersList => {\n      return [...prevUsersList, {\n        name: uName,\n        age: uAge,\n        id: Math.random().toString()\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {\n      onAddUser: addUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rCuhwovjWVqRB5NhAf7v+2So/Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kianaalcala/Downloads/01-starting-project-2/src/App.js"],"names":["React","useState","AddUser","UsersList","App","usersList","setUsersList","addUserHandler","uName","uAge","prevUsersList","name","age","id","Math","random","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CADa,CAEb;AACA;;AAEA,QAAMM,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACtCH,IAAAA,YAAY,CAAEI,aAAD,IAAmB;AAC9B,aAAO,CACL,GAAGA,aADE,EAEL;AAAEC,QAAAA,IAAI,EAAEH,KAAR;AAAeI,QAAAA,GAAG,EAAEH,IAApB;AAA0BI,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAA9B,OAFK,CAAP;AAID,KALW,CAAZ;AAMD,GAPD;;AASA,sBACE;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOC;;GArBMD,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport AddUser from './components/Users/AddUser';\nimport UsersList from './components/Users/UsersList';\n\n\nfunction App() {\n  const [usersList, setUsersList] = useState([]);\n  // we need to lift the state up so that the siblings UsersList and AddUser can communicate to each other\n  // siblings cannot reach each other but they both reach the parent App.js\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList((prevUsersList) => {\n      return [\n        ...prevUsersList, \n        { name: uName, age: uAge, id: Math.random().toString() }\n      ];\n    });\n  };\n\n  return (\n    <div>\n        <AddUser onAddUser={addUserHandler} />\n        {/* use the term on to denote an event will occur */}\n        <UsersList users={usersList} />\n    </div>\n  );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}