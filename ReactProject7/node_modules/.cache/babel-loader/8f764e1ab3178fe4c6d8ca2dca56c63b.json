{"ast":null,"code":"var _jsxFileName = \"/Users/kianaalcala/Downloads/01-starting-project-6/src/components/UserFinder.js\";\nimport { Fragment, Component } from 'react';\nimport classes from './UserFinder.module.css';\nimport Users from './Users';\nimport UsersContext from '../store/users-context';\nimport ErrorBoundary from './ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    // Send http request...\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  } // componentDidUpdate replaces useEffect\n  // if check acts as the dependencies array in useEffect\n\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Users, {\n          users: this.state.filteredUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   return (\n//     <Fragment>\n//         <div className={classes.finder}>\n//             <input type='search' onChange={searchChangeHandler} />\n//         </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"sources":["/Users/kianaalcala/Downloads/01-starting-project-6/src/components/UserFinder.js"],"names":["Fragment","Component","classes","Users","UsersContext","ErrorBoundary","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","finder","bind","contextType"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAG/BM,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA,aAAa,EAAE,KAAKI,OAAL,CAAaC;AAA9B,KAAd;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACP,UAAV,KAAyB,KAAKF,KAAL,CAAWE,UAAxC,EAAoD;AAChD,WAAKE,QAAL,CAAc;AACVH,QAAAA,aAAa,EAAE,KAAKI,OAAL,CAAaC,KAAb,CAAmBI,MAAnB,CAA2BC,IAAD,IACzCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKb,KAAL,CAAWE,UAA9B,CADe;AADL,OAAd;AAKH;AACJ,GAxB8B,CAyB/B;AACA;;;AAEAY,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACvB,SAAKX,QAAL,CAAc;AAACF,MAAAA,UAAU,EAAEa,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACA,QAAC,QAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAExB,OAAO,CAACyB,MAAxB;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,aAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAUH;;AA1C8B,C,CA6CnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnEMH,U,CACKuB,W,GAAczB,Y;AAoEzB,eAAeE,UAAf","sourcesContent":["import { Fragment, Component } from 'react';\n\nimport classes from './UserFinder.module.css';\nimport Users from './Users';\nimport UsersContext from '../store/users-context';\nimport ErrorBoundary from './ErrorBoundary';\n\nclass UserFinder extends Component {\n    static contextType = UsersContext; \n\n    constructor() {\n        super();\n        this.state = {\n            filteredUsers: [],\n            searchTerm: ''\n        };\n    }\n\n    componentDidMount() {\n        // Send http request...\n        this.setState({ filteredUsers: this.context.users });\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchTerm !== this.state.searchTerm) {\n            this.setState({\n                filteredUsers: this.context.users.filter((user) => \n                user.name.includes(this.state.searchTerm)\n                ),\n            });\n        }\n    }\n    // componentDidUpdate replaces useEffect\n    // if check acts as the dependencies array in useEffect\n\n    searchChangeHandler(event) {\n        this.setState({searchTerm: event.target.value});\n    }\n    render() {\n        return (\n        <Fragment>\n            <div className={classes.finder}>\n                <input type='search' onChange={this.searchChangeHandler.bind(this)} />\n            </div>\n            <ErrorBoundary>\n                <Users users={this.state.filteredUsers} />\n        </ErrorBoundary>\n    </Fragment>\n        );\n    }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   return (\n//     <Fragment>\n//         <div className={classes.finder}>\n//             <input type='search' onChange={searchChangeHandler} />\n//         </div>\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\nexport default UserFinder;"]},"metadata":{},"sourceType":"module"}