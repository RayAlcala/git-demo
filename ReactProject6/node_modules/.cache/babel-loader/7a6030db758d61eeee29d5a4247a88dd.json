{"ast":null,"code":"var _jsxFileName = \"/Users/kianaalcala/Downloads/01-starting-project-5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button';\nimport DemoOutput from './components/UI/Button/Demo/DemoOutput';\nimport './App.css';\nimport { toHaveValue } from '@testing-library/jest-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  console.log('APP RUNNING');\n  const toggleParagraphHandler = useCallback(() => {\n    if (allowToggle) {\n      setShowParagraph(prevShowParagraph => !prevShowParagraph);\n    }\n  }, [allowToggle]); // useCallback passes our function as a first argument and stores it in memory\n  // useCallback then returns that stored function and reuses that same function object \n  // useCallback tells React to reuse the same function when re-rendering, therefore optimizing performance \n  // the second argument for useCallback is an array for dependencies\n  // whenever the variable in the array changes and has a new value, we want to recreate \n  // that function and store that new recreated function \n  // this ensures we always use the latest value \n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Toggle Paragraph!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9l117POqBkkgHsyGOUAkO3R6HtY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kianaalcala/Downloads/01-starting-project-5/src/App.js"],"names":["React","useState","useCallback","Button","DemoOutput","toHaveValue","App","showParagraph","setShowParagraph","allowToggle","setAllowToggle","console","log","toggleParagraphHandler","prevShowParagraph","allowToggleHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,QAAMC,sBAAsB,GAAGX,WAAW,CAAC,MAAM;AAC/C,QAAIO,WAAJ,EAAiB;AACdD,MAAAA,gBAAgB,CAAEM,iBAAD,IAAuB,CAACA,iBAAzB,CAAhB;AACF;AACF,GAJyC,EAIvC,CAACL,WAAD,CAJuC,CAA1C,CANa,CAWb;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,QAAMM,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAGH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCQP,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport Button from './components/UI/Button/Button';\nimport DemoOutput from './components/UI/Button/Demo/DemoOutput';\nimport './App.css';\nimport { toHaveValue } from '@testing-library/jest-dom';\n\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n\n  console.log('APP RUNNING');\n\n  const toggleParagraphHandler = useCallback(() => {\n    if (allowToggle) {\n       setShowParagraph((prevShowParagraph) => !prevShowParagraph);\n    }\n  }, [allowToggle]);\n  // useCallback passes our function as a first argument and stores it in memory\n  // useCallback then returns that stored function and reuses that same function object \n  // useCallback tells React to reuse the same function when re-rendering, therefore optimizing performance \n\n  // the second argument for useCallback is an array for dependencies\n  // whenever the variable in the array changes and has a new value, we want to recreate \n  // that function and store that new recreated function \n  // this ensures we always use the latest value \n\n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show ={showParagraph} />\n      {/* show is a prop in DemoOutput.js */}\n      <Button onClick={allowToggleHandler}>Allow Paragraph!</Button>\n      <Button onClick={toggleParagraphHandler}>Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}